[
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "Blog",
    "section": "",
    "text": "Sport\n\n\nAFL\n\n\nR\n\n\nData\n\n\n\n\nThis blog post discusses the types of statistical questions one often posits while watching the footy (or indeed any sport). I will use this article as a medium through which I can introduce analysis of AFL data in R.\n\n\n\n\n\n\n25 July 2023\n\n\nTim Gummer\n\n\n18 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/index.html#section",
    "href": "blog/index.html#section",
    "title": "Blog",
    "section": "",
    "text": "Sport\n\n\nAFL\n\n\nR\n\n\nData\n\n\n\n\nThis blog post discusses the types of statistical questions one often posits while watching the footy (or indeed any sport). I will use this article as a medium through which I can introduce analysis of AFL data in R.\n\n\n\n\n\n\n25 July 2023\n\n\nTim Gummer\n\n\n18 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "cv/index.html#download",
    "href": "cv/index.html#download",
    "title": "Curriculum Vitae",
    "section": "Download",
    "text": "Download\n\n\n\n\n  \n     Download current CV"
  },
  {
    "objectID": "cv/index.html#colophon",
    "href": "cv/index.html#colophon",
    "title": "Curriculum Vitae",
    "section": "Colophon",
    "text": "Colophon\n\nHow the CV(ausage) is made.\n\nMy resume was built in a “data-driven” fashion using the vitae R package and Excel1. It uses the beautiful Awesome CV template which I previously used in pure \\(\\LaTeX\\).1 Note that the linked YouTube video does not use Excel but I do.\nSharing\nIt is currently in a private repository on GitHub as it has some private information in it. There is also a visually consistent template for writing (cover) letters as well. I am happy to share the code with anyone who is interested. It probably is best suited to those familiar with \\(\\LaTeX\\), R and Excel2.2 I am not sure how large the intersection between these skill sets is but I personally find the workflow and resulting look very satisfying.\nIn the future I may make a clean template in a public repository to share with an accompanying blog post on how to use the template."
  },
  {
    "objectID": "cv/index.html#bit-of-fun",
    "href": "cv/index.html#bit-of-fun",
    "title": "Curriculum Vitae",
    "section": "Bit of Fun",
    "text": "Bit of Fun\nUnfortunately I do not have a video CV."
  },
  {
    "objectID": "goals/index.html#table-legend",
    "href": "goals/index.html#table-legend",
    "title": "Goals",
    "section": "Table Legend",
    "text": "Table Legend\nBelow is a legend for the Status and Completion fields."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tim Gummer",
    "section": "",
    "text": "Github\n  \n  \n    \n     LinkedIn\n  \n  \n    \n     Email\n  \n\n  \n  \n\nYou have reached the personal website of Tim Gummer. I am an Associate of Institute of Actuaries of Australia (AIAA). I am currently taking an 18 month leave of absence from my job as an Actuarial Analyst at Finity Consulting in order to spend more time on my actuarial studies (to become a fellow), with my family and on personal projects.\nI have built this website as a fun project. I would like to use it to chronicle some of my side projects. I enjoy these projects for their own sake and the main benefit I get out of them is learning and the satisfaction of building something cool. I hope that this website will provide me with further motivation to work on these projects (as well as being an enjoyable project in and of itself).\n\nThe content of this site will mix and match combinations of some of my particular interests/skills listed below:\n\nTools/Languages: R, VBA, Excel, \\(\\LaTeX\\), Python\nMethods: Statistics, Data Science (Collection, Visualisation, Modelling), Mathematics\nApplications: Sport (Australian Rules Football, Cricket)"
  },
  {
    "objectID": "index.html#welcome-to-my-website",
    "href": "index.html#welcome-to-my-website",
    "title": "Tim Gummer",
    "section": "",
    "text": "You have reached the personal website of Tim Gummer. I am an Associate of Institute of Actuaries of Australia (AIAA). I am currently taking an 18 month leave of absence from my job as an Actuarial Analyst at Finity Consulting in order to spend more time on my actuarial studies (to become a fellow), with my family and on personal projects.\nI have built this website as a fun project. I would like to use it to chronicle some of my side projects. I enjoy these projects for their own sake and the main benefit I get out of them is learning and the satisfaction of building something cool. I hope that this website will provide me with further motivation to work on these projects (as well as being an enjoyable project in and of itself).\n\nThe content of this site will mix and match combinations of some of my particular interests/skills listed below:\n\nTools/Languages: R, VBA, Excel, \\(\\LaTeX\\), Python\nMethods: Statistics, Data Science (Collection, Visualisation, Modelling), Mathematics\nApplications: Sport (Australian Rules Football, Cricket)"
  },
  {
    "objectID": "index.html#session-info",
    "href": "index.html#session-info",
    "title": "Tim Gummer",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.1 (2023-06-16 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 11 x64 (build 22621)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\ntime zone: Australia/Sydney\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.2 compiler_4.3.1    fastmap_1.1.1     cli_3.6.1        \n [5] tools_4.3.1       htmltools_0.5.5   rstudioapi_0.14   yaml_2.3.7       \n [9] rmarkdown_2.22    knitr_1.43        jsonlite_1.8.5    xfun_0.39        \n[13] digest_0.6.31     rlang_1.1.1       evaluate_0.21    \n\nSys.time()\n\n[1] \"2023-07-25 15:41:36 AEST\""
  },
  {
    "objectID": "blog/2023/July/over-analysing-idle-footy-chat/index.html#a-concrete-example",
    "href": "blog/2023/July/over-analysing-idle-footy-chat/index.html#a-concrete-example",
    "title": "(Over-)Analysing Idle Footy Chat",
    "section": "A concrete example",
    "text": "A concrete example\nI recently had the misfortune (as a West Coast fan) of attending a game live between the Sydney Swans and (not so) mighty West Coast Eagles with the following scoreline:\n\nIn one-sided games like this, it seems to me that footy stats questions become more common than usual for two key reasons:\n\nIt adds something interesting to a game that otherwise lacks excitement\nThese games are often filled with large statistical anomalies that might set new records\n\nIf we also consider that it was two actuaries talking, it is safe to say that footy stats questions were flying left, right and centre on that gloomy (but not because of the weather) Saturday night at the SCG. The questions we posed did not just vanish into the aether either, I (with the idea of writing this article in mind) decided to record the more interesting (and doable) questions listed below:\n\n\nWhat is the record for the highest scoring quarter?\nWhat is the record for the most individual goal kickers in a single game?\nWhat is the record for the most multiple goal kickers in a single game?\nWhat is the record for the most players kicking five or more goals in a single game (i.e. the most “bags”)?\nWhere does the aforementioned game rank among the most one-sided games?\nWhat is the record for the most clangers in a game?\nWhat is the record for the worst disposal efficiency in a game by a player?\nHas anyone won a Norm Smith Medal in their first season in the AFL?\nWhat is the record for the most unanswered goals in a game?*\nWhat is the school with the most AFL players on their list?*\nWhat city/town has the most AFL players relative to population?*\nWhich player has the best goals to behinds ratio?*\nHave there ever been any undefeated seasons?*\nWhat is the worst win-loss record to make finals?*\n\n\n\n\n\n\n\n\nDisclaimer on the asterisk\n\n\n\nI have put an asterisk next to questions that either:\n\ncannot easily be answered by the methods I discuss below; or\nare too lengthy for this blog post (these may get their own blog post in the future).\n\nThe remaining questions will be tackled using R below.\n\n\nIf you are only really interested in the answers (and not the R coding), you can jump ahead by clicking here."
  },
  {
    "objectID": "blog/2023/July/over-analysing-idle-footy-chat/index.html#the-fitzroy-package",
    "href": "blog/2023/July/over-analysing-idle-footy-chat/index.html#the-fitzroy-package",
    "title": "(Over-)Analysing Idle Footy Chat",
    "section": "The fitzRoy Package",
    "text": "The fitzRoy Package\nThe first step in analysing AFL data is obtaining the data (“collection”). Our first thought might be to search the web for publicly available AFL datasets and APIs or even scrape the data from websites such as the official AFL website, Footywire or AFL Tables. But there is a more straight-forward way.\nWhile most people now know Fitzroy as a trendy inner city suburb of Melbourne, filled with terraces and over-priced croissants, it was once home9 to the mighty (and now merged out of existence) Fitzroy Lions Football Club.9 It is also (regrettably) the place of my birth but as a WA boy I don’t like to talk about the fact that my parents happened to be in Melbourne when I was born.\n\n\n\n\nWe can obtain the data we need very simply using its name-sake, the fitzRoy R package. It abstracts away all the web scraping and API calls for us into a very helpful family of fetch_* functions.\nSo let’s begin by loading the fitzRoy package and while we’re at it, I will also load all the other packages I will be using.\n\nlibrary(fitzRoy)\n\n# Note that I generally avoid mixing dplyr and data.table at the same time\n#   but the reason I have done with will become apparent later\nlibrary(dplyr)\nlibrary(data.table)\n\nlibrary(rvest)\nlibrary(stringr)\n\n\nfitzRoy Data Sources\nfitzRoy provides access to a number of footy data sources10 including AFL Tables and the official AFL website. Each data source has its own advantages and disadvantages, for example:10 Up-to-date information on data sources can be found on fitzRoy’s documentation site\n\nAFL Tables has the entirety of AFL/VFL history (1897 to present) but lacks some of the more advanced stats.\nThe official AFL website only has data from 2014 onwards but it also probably the most complete in terms of the advanced statistics it contains (e.g. centre bounce attendances11).\n\n11 Centre bounce attendances (CBAs) are a commonly-used metrics in AFL fantasy, coaches often look at tools such as this one to help with researching their trades.Where possible we will use the AFL Tables data set as it has the full history of the AFL on it. However if we require stats that it is missing, we will simply have to adopt a different data source and caveat it by saying it is only for a subset of the full history of the competition.\nThe fetch_* family of functions from the fitzRoy package allow us to read the package. Consult the documentation site for a complete list of all the available functions. Below we will get the data we need to answer our questions:\n\nplayer_stats_afltables &lt;- fitzRoy::fetch_player_stats_afltables(season = 1897:2023)\nresults_afltables &lt;- fitzRoy::fetch_results_afltables(season = 1897:2023)\n\n\n\n\n\n\n\nBeing a good citizen\n\n\n\nWhen sourcing data from fitzRoy, it is important to follow good data collection12 etiquette by only downloading the data you need and avoiding repeatedly downloading the same data over and over again. This prevents servers being overloaded and will mean everyone will get their data faster.\nFor example for the purposes of this blog post, I have saved the data in a local RDS file instead of repeatedly calling the fetch_* functions, I use readRDS(). The code for this is below (and the code above is not actually run but is cleaner for demonstration purposes):\n\nif(file.exists(\"data/player_stats_afltables.RDS\")) {\n  player_stats_afltables &lt;- readRDS(\"data/player_stats_afltables.RDS\")\n  \n} else {\n  player_stats_afltables &lt;- fitzRoy::fetch_player_stats_afltables(season = 1897:2023)\n  saveRDS(player_stats_afltables, \"data/player_stats_afltables.RDS\")\n}\n\nif(file.exists(\"data/results_afltables.RDS\")) {\n  results_afltables &lt;- readRDS(\"data/results_afltables.RDS\")\n  \n} else {\n  results_afltables &lt;- fitzRoy::fetch_results_afltables(season = 1897:2023)\n  saveRDS(results_afltables, \"data/results_afltables.RDS\")\n}\n\n\n\n12 this topic is discussed on the fitzRoy documentation site here"
  },
  {
    "objectID": "blog/2023/July/over-analysing-idle-footy-chat/index.html#finicky-details-about-other-r-packages",
    "href": "blog/2023/July/over-analysing-idle-footy-chat/index.html#finicky-details-about-other-r-packages",
    "title": "(Over-)Analysing Idle Footy Chat",
    "section": "Finicky Details About Other R Packages",
    "text": "Finicky Details About Other R Packages\nTidyverse versus data.table\n\nIn the R community, there is an ongoing power struggle between using the Posit13-backed tidyverse and the ever-potent data.table.13 formally known as RStudio (RIP)\nAs to not unsettle people who prefer either dplyr (and the tidyverse) or data.table, I have written code in both packages as to not alienate anyone14. Where relevant, I have used a tabbed layout to allow the reader to see both for their convenience. As my personal preference for readability is the tidyverse, I will place this code in the first tab.14 note that I have not written a base R dataframes version because I can see arguments for using both tidyverse and data.table but base R data.frames will probably cause more pain than they are worth (there is a reason that tidyverse and data.table exist)\n\n\nTidyverse\ndata.table\n\n\n\nNote that the code below is somewhat redundant as the fitzRoy package follows the tidyverse philosophy and returns tibbles. However this is add the _tb suffix15 to distinguish it from the data.table code.15 an abbreviation of “tibble”\n\nplayer_stats_afltables_tb &lt;- as_tibble(player_stats_afltables)\nresults_afltables_tb &lt;- as_tibble(results_afltables)\n\n\n\nHenceforth, all data.table code will use the _dt suffix16 as to distinguish it from the tidyverse code.16 an acronym of “data.table”\n\nplayer_stats_afltables_dt &lt;- as.data.table(player_stats_afltables)\nresults_afltables_dt &lt;- as.data.table(results_afltables)\n\n\n\n\nAdoption of the Native Pipe Operator (|&gt;)\nThe so-called pipe operator (%&gt;%) of the magrittr package has been a core staple of tidyverse since its inception but since the R core team introduced the so-called native pipe (|&gt;) to base R (in version 4.117), this has led to a split in adoption. There are some nuances in its usage18 but it overall behaves in a similar way to the magrittr pipe and has less overhead (and is therefore faster). While the native pipe was initially missing some of the key features of the magrittr pipe, new features19 have been added to it that (in my mind) mean that it might have even surpassed the magrittr pipe.17 another cool thing introduced in this version of R was so-called function shorthand (\\()), see help(\"function\") for more details18 I may even cover these in a future blog post19 In R version 4.2, the _ symbol was added as a placeholder character and in R version 4.3, extractions using the $ symbol are now allowed\nWhile I have tried to appease people in both the tidyverse and data.table camps, I will not be re-writing my code more than once with such as minor syntactic difference as the pipe I use. I will therefore be dragging all my tidyverse-using readers kicking and screaming into the R 4.1 world by adopting the native pipe (|&gt;) in my tidyverse code.\n\nNote that the common RStudio shortcut, Ctrl+Shift+M can be changed from the magrittr pipe (%&gt;%), which is still the default, to the native pipe (|&gt;).\n\nWebscraping package\nWhile the majority of our data will be sourced using the fitzRoy package, a small amount of data (namely Norm Smith medalists, which are outside of the scope of fitzRoy) will require us to perform some bespoke web scraping. This will be performed using the rvest package (loaded above)."
  },
  {
    "objectID": "blog/2023/July/over-analysing-idle-footy-chat/index.html#highest-scoring-quarter",
    "href": "blog/2023/July/over-analysing-idle-footy-chat/index.html#highest-scoring-quarter",
    "title": "(Over-)Analysing Idle Footy Chat",
    "section": "Highest Scoring Quarter",
    "text": "Highest Scoring Quarter\n\n\nTidyverse\ndata.table\n\n\n\nBreak down by\n\nEach quarter\n\n\nlibrary(dplyr)\nlibrary(stringr)\n\nplayer_stats_afltables_tb |&gt; \n  group_by(\n    Season, Round, Date, Local.start.time, Venue, Attendance, Home.team, \n    Away.team, Home.score, .data[[\"Away.score\"]]\n  ) |&gt; \n  summarise(count = n())\nresults_afltables_tb &lt;- as_tibble(results_afltables)\n\n\nplayer_stats_afltables_tb &lt;- as_tibble(player_stats_afltables)\nresults_afltables_tb &lt;- as_tibble(results_afltables)\n\n# verify that it has the same number of rows as the results data.\n\n\n\n\nlibrary(data.table)\nplayer_stats_afltables_dt &lt;- as.data.table(player_stats_afltables)\nresults_afltables_dt &lt;- as.data.table(results_afltables)\n\n\n\n\nComparing to the Swans Eagles Game\nWhile the swans scored heavily in the aforementioned game, it was not loaded so heavily in any particular so they are not really close to the highest scoring quarters. However, their third quarter score of 11 goals 5, 71 made it into the top ten of their highest scoring quarters. I actually didn’t need to run any R code to find this out as there is a page on AFL tables that summarises quarter score records here{targer = “_blank”}."
  },
  {
    "objectID": "blog/2023/July/over-analysing-idle-footy-chat/index.html#most-goal-kickers",
    "href": "blog/2023/July/over-analysing-idle-footy-chat/index.html#most-goal-kickers",
    "title": "(Over-)Analysing Idle Footy Chat",
    "section": "Most Goal-kickers",
    "text": "Most Goal-kickers\nURL structure: https://afltables.com/afl/stats/games/YYYY/AABBYYYYMMDD.html\nwhere AA and BB are the team codes for two teams (described below) playing in ascending order (not order of home and away)\ne.g. https://afltables.com/afl/stats/games/1991/020419910803.html\n01: Adelaide Crows 02: Brisbane Bears (team=brisbane lions for 1987-1996) 03: Carlton 04: Collingwoord 05: Essendon 06: Fitzroy 07: Western Bulldogs/Footscray 08: Fremantle 09: Geelong 10: Hawthorn 11: Melbourne 12: North Melbourne 13: Port Adelaide 14: Richmond 15: St Kilda 16: Sydney/South Melbourne 17 University 18: West Coast 19: Brisbane Lions (team=brisbane lions for 1997 onwards) 20: Gold Coast 21: GWS\nIndividual\nMultiple\nFive or More (Bags)"
  },
  {
    "objectID": "blog/2023/July/over-analysing-idle-footy-chat/index.html#most-clangers",
    "href": "blog/2023/July/over-analysing-idle-footy-chat/index.html#most-clangers",
    "title": "(Over-)Analysing Idle Footy Chat",
    "section": "Most Clangers",
    "text": "Most Clangers\nDefine clanger"
  },
  {
    "objectID": "blog/2023/July/over-analysing-idle-footy-chat/index.html#worst-disposal-efficiency",
    "href": "blog/2023/July/over-analysing-idle-footy-chat/index.html#worst-disposal-efficiency",
    "title": "(Over-)Analysing Idle Footy Chat",
    "section": "Worst Disposal Efficiency",
    "text": "Worst Disposal Efficiency\nDefine disposal efficiency"
  },
  {
    "objectID": "blog/2023/July/over-analysing-idle-footy-chat/index.html#the-norm-smith",
    "href": "blog/2023/July/over-analysing-idle-footy-chat/index.html#the-norm-smith",
    "title": "(Over-)Analysing Idle Footy Chat",
    "section": "The norm smith",
    "text": "The norm smith\nMake the below a collapsible callout (some of it doesn’t need to be)\nThis illustrates the fact that sometimes you need to stray outside of fitzRoy but it give most of the data you could ever want.\nBackground\nThe norm smith medal is award to the player adjudged best a field (best on ground) in the Grand Final.\nThe Norm Smith was first instituted in 1979 and prior to this, there was no official award given. However there is a source someone has provided of who they (and the media of the day) adjudged as being.\nWhile as a Western Australian, I would have no qualms with discarding the older, exclusively Victorian seasons, if not for the fact more data available is always nice (even if it is of more dubious quality).\nUnofficial source of older data https://themongrelpunt.com/footy-history/2020/04/30/before-the-norm-smith-best-on-ground-prior-to-1979/#:~:text=Robert%20Dipierdomenico%20was%20arguably%20best,the%2077%20Grand%20Final%20Replay.\nFor official norm smith which ever of the following are easier:\n\nhttps://www.afl.com.au/stats/leaders-awards/norm-smith-medal\nhttps://en.wikipedia.org/wiki/Norm_Smith_Medal#Recipients\n\nMake sure it lines up with the AFL data.\nFind the youngest player, player with least games"
  },
  {
    "objectID": "blog/2023/July/over-analysing-idle-footy-chat/index.html#preliminary-data-work",
    "href": "blog/2023/July/over-analysing-idle-footy-chat/index.html#preliminary-data-work",
    "title": "(Over-)Analysing Idle Footy Chat",
    "section": "Preliminary Data Work",
    "text": "Preliminary Data Work\nFinding the Infamous Game\nLet’s begin with the simple exercise of obtaining the match ID for the aforementioned Swans versus Eagles game.\nTo begin with, let’s scrutinise the results data figure out what we have to work with.\n\nstr(results_afltables)\n\ntibble [16,343 × 16] (S3: tbl_df/tbl/data.frame)\n $ Game        : num [1:16343] 1 2 3 4 5 6 7 8 9 10 ...\n $ Date        : Date[1:16343], format: \"1897-05-08\" \"1897-05-08\" ...\n $ Round       : chr [1:16343] \"R1\" \"R1\" \"R1\" \"R1\" ...\n $ Home.Team   : chr [1:16343] \"Fitzroy\" \"Collingwood\" \"Geelong\" \"Sydney\" ...\n $ Home.Goals  : int [1:16343] 6 5 3 3 6 4 3 9 6 5 ...\n $ Home.Behinds: int [1:16343] 13 11 6 9 4 6 8 10 5 9 ...\n $ Home.Points : int [1:16343] 49 41 24 27 40 30 26 64 41 39 ...\n $ Away.Team   : chr [1:16343] \"Carlton\" \"St Kilda\" \"Essendon\" \"Melbourne\" ...\n $ Away.Goals  : int [1:16343] 2 2 7 6 5 8 10 3 5 7 ...\n $ Away.Behinds: int [1:16343] 4 4 5 8 6 2 6 1 7 8 ...\n $ Away.Points : int [1:16343] 16 16 47 44 36 50 66 19 37 50 ...\n $ Venue       : chr [1:16343] \"Brunswick St\" \"Victoria Park\" \"Corio Oval\" \"Lake Oval\" ...\n $ Margin      : int [1:16343] 33 25 -23 -17 4 -20 -40 45 4 -11 ...\n $ Season      : num [1:16343] 1897 1897 1897 1897 1897 ...\n $ Round.Type  : chr [1:16343] \"Regular\" \"Regular\" \"Regular\" \"Regular\" ...\n $ Round.Number: int [1:16343] 1 1 1 1 2 2 2 2 3 3 ...\n\n\nBased on the above we can use a combination of the Date (or combination of Season and Round), Home.Team and Away.Team fields to uniquely describe the match and thus obtain it’s unique Game id.\n\n\nTidyverse\ndata.table\n\n\n\n\n(\n  results_afltables_tb |&gt; \n    filter(Season == 2023, Round == \"R15\", Home.Team == \"Sydney\", \n           Away.Team == \"West Coast\") |&gt; \n    pull(Game) -&gt;\n    infamous_game_id_tb\n)\n\n[1] 16313\n\n\n\n\n\n(\n  infamous_game_id_dt &lt;- results_afltables_dt[\n    Season == 2023 & Round == \"R15\" & Home.Team == \"Sydney\" & \n      Away.Team == \"West Coast\", \n    Game\n    ]\n)\n\n[1] 16313\n\n# confirming:\nidentical(infamous_game_id_tb, infamous_game_id_dt)\n\n[1] TRUE\n\n\n\n\n\nWe can henceforth use this game ID whenever relevant to rank the swans.\nFlattening the Data\nWhile inspecting the results_afltables_dt we may not that certain key match-level information (e.g. quarter-by-quarter scores) for answering some of our question is missing from it. As it turns out, this data is actually available on the player_stats_afl_tables data (one row per player per match) instead. Thus, we will create a ‘flattened’ version of player_stats_afl_tables that provide match-level field.\nFirst, let’s take a look at the player_stats_afl_tables dataset to determine which fields are player-level and which are match-level.\n\n\nCode\nOutput\n\n\n\n\nstr(player_stats_afltables)\n\nNote that the output has been placed into another tab as it is rather long.\n\n\n\n\ntibble [662,701 × 59] (S3: tbl_df/tbl/data.frame)\n $ Season                 : num [1:662701] 1897 1897 1897 1897 1897 ...\n $ Round                  : chr [1:662701] \"1\" \"1\" \"1\" \"1\" ...\n $ Date                   : Date[1:662701], format: \"1897-05-08\" \"1897-05-08\" ...\n $ Local.start.time       : int [1:662701] 1500 1500 1500 1500 1500 1500 1500 1500 1500 1500 ...\n $ Venue                  : chr [1:662701] \"Brunswick St\" \"Brunswick St\" \"Brunswick St\" \"Brunswick St\" ...\n $ Attendance             : num [1:662701] 3000 3000 3000 3000 3000 3000 3000 3000 3000 3000 ...\n $ Home.team              : chr [1:662701] \"Fitzroy\" \"Fitzroy\" \"Fitzroy\" \"Fitzroy\" ...\n $ HQ1G                   : int [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ HQ1B                   : int [1:662701] 5 5 5 5 5 5 5 5 5 5 ...\n $ HQ2G                   : int [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ HQ2B                   : int [1:662701] 11 11 11 11 11 11 11 11 11 11 ...\n $ HQ3G                   : int [1:662701] 5 5 5 5 5 5 5 5 5 5 ...\n $ HQ3B                   : int [1:662701] 13 13 13 13 13 13 13 13 13 13 ...\n $ HQ4G                   : int [1:662701] 6 6 6 6 6 6 6 6 6 6 ...\n $ HQ4B                   : int [1:662701] 13 13 13 13 13 13 13 13 13 13 ...\n $ Home.score             : int [1:662701] 49 49 49 49 49 49 49 49 49 49 ...\n $ Away.team              : chr [1:662701] \"Carlton\" \"Carlton\" \"Carlton\" \"Carlton\" ...\n $ AQ1G                   : int [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ AQ1B                   : int [1:662701] 3 3 3 3 3 3 3 3 3 3 ...\n $ AQ2G                   : int [1:662701] 1 1 1 1 1 1 1 1 1 1 ...\n $ AQ2B                   : int [1:662701] 3 3 3 3 3 3 3 3 3 3 ...\n $ AQ3G                   : int [1:662701] 2 2 2 2 2 2 2 2 2 2 ...\n $ AQ3B                   : int [1:662701] 3 3 3 3 3 3 3 3 3 3 ...\n $ AQ4G                   : int [1:662701] 2 2 2 2 2 2 2 2 2 2 ...\n $ AQ4B                   : int [1:662701] 4 4 4 4 4 4 4 4 4 4 ...\n $ Away.score             : int [1:662701] 16 16 16 16 16 16 16 16 16 16 ...\n $ First.name             : chr [1:662701] \"Bill\" \"Jimmy\" \"Bob\" \"Tom\" ...\n $ Surname                : chr [1:662701] \"Ahern\" \"Aitken\" \"Armstrong\" \"Blake\" ...\n $ ID                     : num [1:662701] 4415 4416 4417 4419 4421 ...\n $ Jumper.No.             : chr [1:662701] \"0\" \"0\" \"0\" \"0\" ...\n $ Playing.for            : chr [1:662701] \"Carlton\" \"Carlton\" \"Carlton\" \"Carlton\" ...\n $ Kicks                  : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Marks                  : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Handballs              : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Goals                  : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Behinds                : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Hit.Outs               : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Tackles                : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Rebounds               : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Inside.50s             : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Clearances             : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Clangers               : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Frees.For              : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Frees.Against          : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Brownlow.Votes         : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Contested.Possessions  : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Uncontested.Possessions: num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Contested.Marks        : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Marks.Inside.50        : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ One.Percenters         : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Bounces                : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Goal.Assists           : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Time.on.Ground..       : num [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Substitute             : int [1:662701] 0 0 0 0 0 0 0 0 0 0 ...\n $ Umpire.1               : chr [1:662701] \"Samuel Hood\" \"Samuel Hood\" \"Samuel Hood\" \"Samuel Hood\" ...\n $ Umpire.2               : chr [1:662701] \"\" \"\" \"\" \"\" ...\n $ Umpire.3               : chr [1:662701] \"\" \"\" \"\" \"\" ...\n $ Umpire.4               : chr [1:662701] \"\" \"\" \"\" \"\" ...\n $ group_id               : int [1:662701] 2 2 2 2 2 2 2 2 2 2 ...\n\n\n\n\n\nInspecting the fields and using some knowledge of the game, we can determine that the following fields are player-level:\n\nplayer_level_fields &lt;- c(\n  \"First.name\", \"Surname\", \"ID\", \"Jumper.No.\", \"Playing.for\", \"Kicks\", \"Marks\", \n  \"Handballs\", \"Goals\", \"Behinds\", \"Hit.Outs\", \"Tackles\", \"Rebounds\", \"Inside.50s\", \n  \"Clearances\", \"Clangers\", \"Frees.For\", \"Frees.Against\", \"Brownlow.Votes\", \n  \"Contested.Possessions\", \"Uncontested.Possessions\", \"Contested.Marks\", \n  \"Marks.Inside.50\", \"One.Percenters\", \"Bounces\", \"Goal.Assists\", \"Time.on.Ground..\",\n  \"Substitute\"\n  )\n\nmatch_level_fields &lt;- setdiff(colnames(player_stats_afltables), player_level_fields)\n\nWe can now safely group by the match_level_fields below:\n\n\nTidyverse\ndata.table\n\n\n\n\nplayer_stats_afltables_tb |&gt; \n  mutate(\n    home_player = Playing.for == Home.team,\n    away_player = Playing.for == Away.team\n  ) |&gt; \n  group_by(pick(match_level_fields)) |&gt; \n  summarise(\n    player_count = n(),\n    home_kicks = sum(Kicks * home_player),\n    away_kicks = sum(Kicks * away_player),\n    home_marks = sum(Marks * home_player),\n    away_marks = sum(Marks * away_player),\n    home_handballs = sum(Handballs * home_player),\n    away_handballs = sum(Handballs * away_player),\n    home_hit_outs = sum(Hit.Outs * home_player),\n    away_hit_outs = sum(Hit.Outs * away_player),\n    home_tackles = sum(Tackles * home_player),\n    away_tackles = sum(Tackles * away_player),\n    home_rebounds = sum(Rebounds * home_player),\n    away_rebounds = sum(Rebounds * away_player),\n    home_inside_50s = sum(Inside.50s * home_player),\n    away_inside_50s = sum(Inside.50s * away_player),\n    home_clearances = sum(Clearances * home_player),\n    away_clearances = sum(Clearances * away_player),\n    home_clangers = sum(Clangers * home_player),\n    away_clangers = sum(Clangers * away_player),\n    home_frees_for = sum(Frees.For * home_player),\n    away_frees_for = sum(Frees.For * away_player),\n    home_frees_against = sum(Frees.Against * home_player),\n    away_frees_against = sum(Frees.Against * away_player),\n    home_contested_possessions = sum(Contested.Possessions * home_player),\n    away_contested_possessions = sum(Contested.Possessions * away_player),\n    home_uncontested_possessions = sum(Uncontested.Possessions * home_player),\n    away_uncontested_possessions = sum(Uncontested.Possessions * away_player),\n    home_contested_marks = sum(Contested.Marks * home_player),\n    away_contested_marks = sum(Contested.Marks * away_player),\n    home_marks_inside_50 = sum(Marks.Inside.50 * home_player),\n    away_marks_inside_50 = sum(Marks.Inside.50 * away_player),\n    home_one_percenters = sum(One.Percenters * home_player),\n    away_one_percenters = sum(One.Percenters * away_player),\n    home_bounces = sum(Bounces * home_player),\n    away_bounces = sum(Bounces * away_player),\n    home_goal_assists = sum(Goal.Assists * home_player),\n    away_goal_assists = sum(Goal.Assists * away_player),\n    .groups = \"drop\"\n  ) -&gt; \n  match_stats_flat_tb\n\nWarning: There was 1 warning in `group_by()`.\nℹ In argument: `pick(match_level_fields)`.\nCaused by warning:\n! Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(match_level_fields)\n\n  # Now:\n  data %&gt;% select(all_of(match_level_fields))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\n\nNote that the output has been placed into another tab as it is rather long."
  }
]